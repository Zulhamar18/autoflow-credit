{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zulham\\\\autoflow-credit\\\\autoflow-credit-frontend\\\\src\\\\WalletBalance.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Web3Provider } from '@ethersproject/providers';\nimport { formatEther } from 'ethers/lib/utils.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WalletBalance({\n  walletAddress\n}) {\n  _s();\n  const [balance, setBalance] = useState('0.0');\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (!walletAddress) {\n      setBalance('0.0');\n      return;\n    }\n    const provider = new Web3Provider(window.ethereum);\n    async function fetchBalance() {\n      try {\n        const balanceBigNumber = await provider.getBalance(walletAddress);\n        const balanceInEther = formatEther(balanceBigNumber);\n        setBalance(parseFloat(balanceInEther).toFixed(4));\n        setError(null);\n      } catch (err) {\n        setError('Gagal mengambil saldo');\n        setBalance('0.0');\n      }\n    }\n    fetchBalance();\n\n    // Refresh saldo tiap 10 detik\n    const interval = setInterval(fetchBalance, 10000);\n    return () => clearInterval(interval);\n  }, [walletAddress]);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Wallet Balance: \", balance, \" ETH\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(WalletBalance, \"9imxf/nt970/QOpklKXWrG+zXIk=\");\n_c = WalletBalance;\nexport default WalletBalance;\nvar _c;\n$RefreshReg$(_c, \"WalletBalance\");","map":{"version":3,"names":["React","useEffect","useState","Web3Provider","formatEther","jsxDEV","_jsxDEV","WalletBalance","walletAddress","_s","balance","setBalance","error","setError","provider","window","ethereum","fetchBalance","balanceBigNumber","getBalance","balanceInEther","parseFloat","toFixed","err","interval","setInterval","clearInterval","style","color","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Zulham/autoflow-credit/autoflow-credit-frontend/src/WalletBalance.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Web3Provider } from '@ethersproject/providers';\r\nimport { formatEther } from 'ethers/lib/utils.js';\r\n\r\nfunction WalletBalance({ walletAddress }) {\r\n  const [balance, setBalance] = useState('0.0');\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (!walletAddress) {\r\n      setBalance('0.0');\r\n      return;\r\n    }\r\n\r\n    const provider = new Web3Provider(window.ethereum);\r\n\r\n    async function fetchBalance() {\r\n      try {\r\n        const balanceBigNumber = await provider.getBalance(walletAddress);\r\n        const balanceInEther = formatEther(balanceBigNumber);\r\n        setBalance(parseFloat(balanceInEther).toFixed(4));\r\n        setError(null);\r\n      } catch (err) {\r\n        setError('Gagal mengambil saldo');\r\n        setBalance('0.0');\r\n      }\r\n    }\r\n\r\n    fetchBalance();\r\n\r\n    // Refresh saldo tiap 10 detik\r\n    const interval = setInterval(fetchBalance, 10000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [walletAddress]);\r\n\r\n  if (error) {\r\n    return <div style={{ color: 'red' }}>{error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      Wallet Balance: {balance} ETH\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WalletBalance;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,YAAY,QAAQ,0BAA0B;AACvD,SAASC,WAAW,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,aAAaA,CAAC;EAAEC;AAAc,CAAC,EAAE;EAAAC,EAAA;EACxC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,IAAI,CAACO,aAAa,EAAE;MAClBG,UAAU,CAAC,KAAK,CAAC;MACjB;IACF;IAEA,MAAMG,QAAQ,GAAG,IAAIX,YAAY,CAACY,MAAM,CAACC,QAAQ,CAAC;IAElD,eAAeC,YAAYA,CAAA,EAAG;MAC5B,IAAI;QACF,MAAMC,gBAAgB,GAAG,MAAMJ,QAAQ,CAACK,UAAU,CAACX,aAAa,CAAC;QACjE,MAAMY,cAAc,GAAGhB,WAAW,CAACc,gBAAgB,CAAC;QACpDP,UAAU,CAACU,UAAU,CAACD,cAAc,CAAC,CAACE,OAAO,CAAC,CAAC,CAAC,CAAC;QACjDT,QAAQ,CAAC,IAAI,CAAC;MAChB,CAAC,CAAC,OAAOU,GAAG,EAAE;QACZV,QAAQ,CAAC,uBAAuB,CAAC;QACjCF,UAAU,CAAC,KAAK,CAAC;MACnB;IACF;IAEAM,YAAY,CAAC,CAAC;;IAEd;IACA,MAAMO,QAAQ,GAAGC,WAAW,CAACR,YAAY,EAAE,KAAK,CAAC;IAEjD,OAAO,MAAMS,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,CAAChB,aAAa,CAAC,CAAC;EAEnB,IAAII,KAAK,EAAE;IACT,oBAAON,OAAA;MAAKqB,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAC,QAAA,EAAEjB;IAAK;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EACpD;EAEA,oBACE3B,OAAA;IAAAuB,QAAA,GAAK,kBACa,EAACnB,OAAO,EAAC,MAC3B;EAAA;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEV;AAACxB,EAAA,CAzCQF,aAAa;AAAA2B,EAAA,GAAb3B,aAAa;AA2CtB,eAAeA,aAAa;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}