{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zulham\\\\autoflow-credit\\\\autoflow-credit-frontend\\\\src\\\\WalletBalance.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WalletBalance({\n  walletAddress\n}) {\n  _s();\n  const [balance, setBalance] = useState('0.0');\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (!walletAddress) {\n      setBalance('0.0');\n      return;\n    }\n    const provider = new ethers.BrowserProvider(window.ethereum);\n    async function fetchBalance() {\n      try {\n        const balanceBigInt = await provider.getBalance(walletAddress);\n        const balanceInEther = ethers.formatEther(balanceBigInt);\n        setBalance(parseFloat(balanceInEther).toFixed(4));\n        setError(null);\n      } catch (err) {\n        setError('Gagal mengambil saldo');\n        setBalance('0.0');\n      }\n    }\n    fetchBalance();\n\n    // Refresh saldo tiap 10 detik\n    const interval = setInterval(fetchBalance, 10000);\n    return () => clearInterval(interval);\n  }, [walletAddress]);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Wallet Balance: \", balance, \" ETH\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(WalletBalance, \"9imxf/nt970/QOpklKXWrG+zXIk=\");\n_c = WalletBalance;\nexport default WalletBalance;\nvar _c;\n$RefreshReg$(_c, \"WalletBalance\");","map":{"version":3,"names":["React","useEffect","useState","ethers","jsxDEV","_jsxDEV","WalletBalance","walletAddress","_s","balance","setBalance","error","setError","provider","BrowserProvider","window","ethereum","fetchBalance","balanceBigInt","getBalance","balanceInEther","formatEther","parseFloat","toFixed","err","interval","setInterval","clearInterval","style","color","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Zulham/autoflow-credit/autoflow-credit-frontend/src/WalletBalance.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { ethers } from 'ethers';\r\n\r\nfunction WalletBalance({ walletAddress }) {\r\n  const [balance, setBalance] = useState('0.0');\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (!walletAddress) {\r\n      setBalance('0.0');\r\n      return;\r\n    }\r\n\r\n    const provider = new ethers.BrowserProvider(window.ethereum);\r\n\r\n    async function fetchBalance() {\r\n      try {\r\n        const balanceBigInt = await provider.getBalance(walletAddress);\r\n        const balanceInEther = ethers.formatEther(balanceBigInt);\r\n        setBalance(parseFloat(balanceInEther).toFixed(4));\r\n        setError(null);\r\n      } catch (err) {\r\n        setError('Gagal mengambil saldo');\r\n        setBalance('0.0');\r\n      }\r\n    }\r\n\r\n    fetchBalance();\r\n\r\n    // Refresh saldo tiap 10 detik\r\n    const interval = setInterval(fetchBalance, 10000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [walletAddress]);\r\n\r\n  if (error) {\r\n    return <div style={{ color: 'red' }}>{error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      Wallet Balance: {balance} ETH\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WalletBalance;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,MAAM,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,SAASC,aAAaA,CAAC;EAAEC;AAAc,CAAC,EAAE;EAAAC,EAAA;EACxC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,IAAI,CAACM,aAAa,EAAE;MAClBG,UAAU,CAAC,KAAK,CAAC;MACjB;IACF;IAEA,MAAMG,QAAQ,GAAG,IAAIV,MAAM,CAACW,eAAe,CAACC,MAAM,CAACC,QAAQ,CAAC;IAE5D,eAAeC,YAAYA,CAAA,EAAG;MAC5B,IAAI;QACF,MAAMC,aAAa,GAAG,MAAML,QAAQ,CAACM,UAAU,CAACZ,aAAa,CAAC;QAC9D,MAAMa,cAAc,GAAGjB,MAAM,CAACkB,WAAW,CAACH,aAAa,CAAC;QACxDR,UAAU,CAACY,UAAU,CAACF,cAAc,CAAC,CAACG,OAAO,CAAC,CAAC,CAAC,CAAC;QACjDX,QAAQ,CAAC,IAAI,CAAC;MAChB,CAAC,CAAC,OAAOY,GAAG,EAAE;QACZZ,QAAQ,CAAC,uBAAuB,CAAC;QACjCF,UAAU,CAAC,KAAK,CAAC;MACnB;IACF;IAEAO,YAAY,CAAC,CAAC;;IAEd;IACA,MAAMQ,QAAQ,GAAGC,WAAW,CAACT,YAAY,EAAE,KAAK,CAAC;IAEjD,OAAO,MAAMU,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,CAAClB,aAAa,CAAC,CAAC;EAEnB,IAAII,KAAK,EAAE;IACT,oBAAON,OAAA;MAAKuB,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAC,QAAA,EAAEnB;IAAK;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EACpD;EAEA,oBACE7B,OAAA;IAAAyB,QAAA,GAAK,kBACa,EAACrB,OAAO,EAAC,MAC3B;EAAA;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEV;AAAC1B,EAAA,CAzCQF,aAAa;AAAA6B,EAAA,GAAb7B,aAAa;AA2CtB,eAAeA,aAAa;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}